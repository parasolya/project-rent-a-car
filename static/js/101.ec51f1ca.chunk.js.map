{"version":3,"file":"static/js/101.ec51f1ca.chunk.js","mappings":"2LACA,EAA0B,yBAA1B,EAAgG,yB,SC0GhG,EAtGgB,SAAEA,GAIhB,IAAMC,EAAMD,EAAKC,KAAOD,EAAKE,UAEvBC,EAAeH,EAAKI,QAAQC,MAAM,KAClCC,EAAUH,EAAaA,EAAaI,OAAS,GAC7CC,EAAOL,EAAaA,EAAaI,OAAS,GAKhD,GAAwCE,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAsCF,EAAAA,EAAAA,UAAS,SAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAEMC,EAAmBC,aAAaC,QAAQ,YAE1CC,EAAU,GAOd,SAASC,EAAqBlB,GAC5B,QAAImB,MAAMC,QAAQH,IACXA,EAAQI,MAAK,SAACC,GAAD,OAAOA,EAAEC,KAAOvB,EAAKuB,EAArB,GAErB,CA0CA,OAnDGT,IAEFG,EAAUO,KAAKC,MAAMX,IASnBI,EAAqBlB,GAClBU,IACHC,GAAgB,GAChBE,EAAe,QAGbH,IACFC,GAAgB,GAChBE,EAAe,WAiCjB,iBAAKa,UAAWC,EAAhB,WACG,gBAAKD,UAAWC,EAAaC,IAAK3B,EAAK4B,IAAI,SAC7C,4BACG,4BACA,kCAAQ7B,EAAK8B,MAAb,aAAuB9B,EAAK+B,SAC3B,uBAAI/B,EAAKgC,kBAET,4BACE,yBAAIxB,GAAK,gCAAeF,GAAQ,gCAAeN,EAAKiC,kBACpD,yBAAIjC,EAAKkC,MAAK,gCAAelC,EAAKmC,MAAK,gCAAenC,EAAKoC,SAAQ,0CAGxE,0BACI,mBAAQC,QAAS,WAAkBrC,EAAKuB,EAAvB,EAAjB,2BAGN,0BACA,mBACIe,MAAO,CAAEC,gBAAiB3B,GAC1ByB,QAAS,kBAhDf,SAA4BrC,GAC1B,IAAIiB,EAAU,GAERH,EAAmBC,aAAaC,QAAQ,YAM9C,GALIF,IAEFG,EAAUO,KAAKC,MAAMX,IAGnBI,EAAqBlB,GAEvBiB,EAAUA,EAAQuB,QAAO,SAAClB,GAAD,OAAOA,EAAEC,KAAOvB,EAAKuB,EAArB,IACzBZ,GAAgB,GAChBE,EAAe,aACV,CAEL,IAAM4B,EAAYzC,EAClBiB,EAAQyB,KAAKD,GACb9B,GAAgB,GAChBE,EAAe,MAChB,CAIDE,aAAa4B,QAAQ,WAAYnB,KAAKoB,UAAU3B,GAEjD,CAsBoB4B,CAAmB7C,EAAzB,EAFb,sBAUH,ECxGD,EAA0B,2BCyB1B,EArBkB,SAAC,GAEZ,IAMC8C,EANF,EAFeC,MAQIC,KAAI,SAAAhD,GAAI,OAC7B,SAAC,GAAD,UAA2BA,GAAbA,EAAKuB,GADU,IAM/B,OACE,+BACE,eAAIG,UAAWC,EAAf,SAA6BmB,KAGlC,C,o0kBCvBD,EAA2B,8BAA3B,EAAoE,8BAApE,EAAyG,0B,iBCyHzG,EApHoB,SAAC,GAAoD,IAAlDG,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,gBAAiBC,EAAsB,EAAtBA,gBAEhD,GAAsD1C,EAAAA,EAAAA,UAAS,MAA/D,eAAO2C,EAAP,KAA4BC,EAA5B,KACA,GAAsD5C,EAAAA,EAAAA,UAAS,MAA/D,eAAO6C,EAAP,KAA4BC,EAA5B,KACA,GAAkC9C,EAAAA,EAAAA,UAAS,IAA3C,eAAO+C,EAAP,KAAkBC,EAAlB,KACA,GAA8BhD,EAAAA,EAAAA,UAAS,IAAvC,eAAOiD,EAAP,KAAgBC,EAAhB,KAKMC,EAAoB,SAAAC,GACxBC,QAAQC,IAAIF,GACZ,MAAwBA,EAAEG,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,OACHR,EAAaS,GACb,MACF,IAAK,KACHP,EAAWO,GACX,MACF,QACE,OAEL,EAsBD,OACE,0BACE,kBAAMxC,UAAWC,EAAUsB,SAtBF,SAAAY,GAC3BA,EAAEM,iBACF,IAAMC,EAAmB,CACvBjC,KAAMiB,EAAoBc,MAC1BlC,YAAasB,EAAoBY,MACjCG,KAAMb,EACNc,GAAIZ,GAENI,QAAQC,IAAIK,GACTnB,EAASmB,GACZX,EAAa,IACbE,EAAW,GACZ,EAUG,WACE,gBAAIjC,UAAWC,EAAf,WAEE,eAAID,UAAWC,EAAf,UACE,0BAGE,8BACE,+BACA,SAAC,KAAD,CACE4C,aAAcnB,EACdoB,SAAUnB,EACVoB,QAASvB,EAETwB,YAAa,iDAKrB,eAAIhD,UAAWC,EAAf,UACE,0BACE,8BACE,+BACA,SAAC,KAAD,CACE4C,aAAcjB,EACdkB,SAAUjB,EACVkB,QAAStB,EAETuB,YAAa,OACbC,kBArCW,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,EAAUU,MAAV,OACzB,iCACMV,EADN,OADyB,YA2CnB,2BACE,sCACA,kBACED,KAAK,OACLY,UAAQ,EACR3C,KAAK,OACLgC,MAAOV,EACPgB,SAAU,SAAAX,GACRD,EAAkBC,EACnB,QAGL,2BACE,oCACA,kBACEI,KAAK,KACLY,UAAQ,EAGR3C,KAAK,OACLgC,MAAOR,EACPc,SAAU,SAAAX,GACRD,EAAkBC,EACnB,WAIP,oBACA,mBAAQ3B,KAAK,SAAb,wBAIP,ECpDD,EAzDoB,WAWlB,IANI,OAA0CzB,EAAAA,EAAAA,UAASsC,GAAnD,eAAO+B,EAAP,KAAsBC,EAAtB,KAGE7B,GADU,OAAO,IAAI8B,IAAIjC,EAAAA,KAAU,SAAAkC,GAAG,OAAIA,EAAI9C,IAAR,MACXa,KAAI,SAAAb,GAAI,MAAK,CAAEyC,MAAOzC,EAAM+B,MAAO/B,EAA3B,IAEnC+C,EAAW,GACR5D,EAAI,GAAIA,GAAK,IAAKA,GAAK,GAC9B4D,EAASxC,KAAKpB,GAEjB,IAAM6B,EAAkB+B,EAASlC,KAAI,SAAAb,GAAI,MAAK,CAAEyC,MAAOzC,EAAM+B,MAAO/B,EAA3B,IA8BtC,OACI,4BACJ,yCACA,0BACI,SAAC,EAAD,CAAac,SAhCS,SAAAkC,GAEtB,IAAMC,EAAeD,EACrBrB,QAAQC,IAAIqB,GACZ,IAAMC,EAActC,EAAAA,KAAU,SAAC/C,GAC3B,IAAMgC,EAAcsD,SAAStF,EAAKgC,YAAYuD,QAAQ,MAAO,IAAK,IAElE,OAAO,kBACFvF,GADL,IAEEgC,YAAAA,GAEH,IACD8B,QAAQC,IAAIsB,GAER,IAAMP,EAAgBO,EAAY7C,QAAO,SAACxC,GAAD,OACvCA,EAAKmC,OAASiD,EAAajD,MAC3BnC,EAAKgC,aAAeoD,EAAapD,aACjChC,EAAKoC,SAAWkD,SAASF,EAAaf,KAAM,KAC5CrE,EAAKoC,SAAWkD,SAASF,EAAad,GAAI,GAJH,IAMzCR,QAAQC,IAAIe,GACZC,EAAiBD,EAExB,EAS2C5B,gBAAiBA,EAAiBC,gBAAiBA,OAIjG,SAACqC,EAAA,EAAD,CAAWzC,MAAO+B,MAGrB,C","sources":["webpack://project-rent-a-car/./src/components/CardCar/CardCar.module.css?7468","components/CardCar/CardCar.jsx","webpack://project-rent-a-car/./src/components/ListCards/ListCards.module.css?d9e2","components/ListCards/ListCards.jsx","webpack://project-rent-a-car/./src/components/Form/CatalogForm/CatalogForm.module.css?4732","components/Form/CatalogForm/CatalogForm.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"CardCar_wrapper__tg6Ql\",\"textBox\":\"CardCar_textBox__lokU+\",\"cardImg\":\"CardCar_cardImg__S9Ynu\",\"info\":\"CardCar_info__FAmjV\"};","// import PropTypes from \"prop-types\";\nimport { useState } from 'react';\nimport css from \"./CardCar.module.css\";\n\n\nconst CardCar = ( item,\n  //  onChangeFavoriteArrey \n   ) => {\n  \n  const img = item.img || item.photoLink;\n\n  const arrayAddress = item.address.split(\",\");\n  const country = arrayAddress[arrayAddress.length - 1];\n  const city = arrayAddress[arrayAddress.length - 2];\n\n  const onLearnMore = (id) => {}\n\n  // \n  const [itemFavorite, setItemFavorite] = useState(false); \n  \n  const [buttonColor, setButtonColor] = useState('white'); \n\n  const localStorageData = localStorage.getItem('favorite');\n  \n  let myArray = [];\n\n  if (localStorageData) {\n    // Якщо дані існують у локальному сховищі, то парсимо їх у масив\n    myArray = JSON.parse(localStorageData);\n  };\n\n  function isObjectWithIdExists(item) {\n    if (Array.isArray(myArray)) {            \n    return myArray.some((i) => i.id === item.id);\n  } else {return false};\n  };\n\n  if (isObjectWithIdExists(item)) {\n    if (!itemFavorite) {\n      setItemFavorite(true);\n      setButtonColor('red');\n    }\n  } else {\n    if (itemFavorite) {\n      setItemFavorite(false);\n      setButtonColor('white');\n    }\n  }\n\n  function toggleObjectWithId(item) {\n    let myArray = [];\n\n    const localStorageData = localStorage.getItem('favorite');\n    if (localStorageData) {\n      // Якщо дані існують у локальному сховищі, то парсимо їх у масив\n      myArray = JSON.parse(localStorageData);\n    }\n  \n    if (isObjectWithIdExists(item)) {\n      // Якщо об'єкт існує, то видаляємо його з масиву\n      myArray = myArray.filter((i) => i.id !== item.id);\n      setItemFavorite(false);\n      setButtonColor('white');\n    } else {\n      // Якщо об'єкта немає, то додаємо його до масиву\n      const newObject = item;\n      myArray.push(newObject);\n      setItemFavorite(true);\n      setButtonColor('red');\n    }\n  \n    // Зберігаємо оновлений масив у локальному сховищі\n    \n    localStorage.setItem('favorite', JSON.stringify(myArray));   \n    // onChangeFavoriteArrey(item);\n  };\n\n   return (\n    <div className={css.wrapper}>\n       <img className={css.cardImg} src={img} alt=\"car\"/> \n     <div>\n        <div>\n        <h2>{`${item.model}, ${item.year}`}</h2>\n         <p>{item.rentalPrice}</p>\n         </div>\n         <div>\n           <p>{city}<span>|</span>{country}<span>|</span>{item.rentalCompany}</p>\n           <p>{item.type}<span>|</span>{item.make}<span>|</span>{item.mileage}<span>|</span>{}</p>\n        </div>\n     </div>\n      <div>   \n          <button onClick={() => onLearnMore(item.id)}>Learn more</button>   \n  \n    </div>\n    <div>   \n    <button   \n        style={{ backgroundColor: buttonColor }}\n        onClick={() => toggleObjectWithId(item)}\n      >\n        Hart\n      </button>  \n  \n    </div>\n    </div>\n  );\n};\n\nexport default CardCar;\n\n// CardTwo.propTypes = {\n//   _id: PropTypes.string,\n//   drink: PropTypes.string,\n//   instructions: PropTypes.string,\n//   drinkThumb: PropTypes.string,\n//   onDelete: PropTypes.func,\n// };","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ListCards_wrapper__zpYKR\"};","\n// import PropTypes from 'prop-types';\nimport CardCar from '../CardCar/CardCar';\nimport css from \"./ListCards.module.css\";\n\nconst ListCards = ({ items, \n  // onChangeFavoriteArrey \n}) => {\n\n  // const onFavoriteArrey = (myArray) => {\n  //   onChangeFavoriteArrey()\n  // }\n \n  const elements = items.map(item => (\n    <CardCar key={item.id} {...item} \n    // onChangeFavoriteArrey={onFavoriteArrey}\n    />\n  ));\n\n  return (\n    <>\n      <ul className={css.wrapper}>{elements}</ul>\n    </>\n  );\n};\n\nexport default ListCards;\n\n// ListCardsTwo.propTypes = {\n//   items: PropTypes.array,\n//   onDel: PropTypes.func,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"formList\":\"CatalogForm_formList__1Jcxk\",\"formItem\":\"CatalogForm_formItem__mTI8t\",\"form\":\"CatalogForm_form__BsEWO\"};","import { useState } from 'react';\n// import { SelectForm } from '../SelectForm/SelectForm';\n\nimport css from './CatalogForm.module.css';\nimport Select from 'react-select';\n\nconst CatalogForm = ({ onSubmit, optionsCarBrand, optionsCarPrice }) => {\n \n  const [selectedOptionBrand, setSelectedOptionBrand] = useState(null);\n  const [selectedOptionPrice, setSelectedOptionPrice] = useState(null);\n  const [fromValue, setFromValue] = useState('');\n  const [toValue, setToValue] = useState('');\n\n  \n  \n  //\n  const handleInputChange = e => {\n    console.log(e);\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'from':\n        setFromValue(value);\n        break;\n      case 'to':\n        setToValue(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handlePassParameters = e => {\n    e.preventDefault();\n    const searchParameters = {\n      make: selectedOptionBrand.value,\n      rentalPrice: selectedOptionPrice.value,\n      from: fromValue,\n      to: toValue,\n    };\n    console.log(searchParameters);\n       onSubmit(searchParameters);\n    setFromValue('');\n    setToValue('');\n  };\n\n   const formatOptionLabel = ({ value, label }) => (\n    <div>\n      To {value} $\n    </div>\n  );\n\n  return (\n    <div>\n      <form className={css.form} onSubmit={handlePassParameters}>\n        <ul className={css.formList}>\n          {/* Select */}\n          <li className={css.formItem}>\n            <div>\n              {/* <SelectForm className={css.formItem} title='1' options={optionscarBrand}/> */}\n\n              <label>\n                <h2>1</h2>\n                <Select\n                  defaultValue={selectedOptionBrand}\n                  onChange={setSelectedOptionBrand}\n                  options={optionsCarBrand}\n                  //   styles={customStyles}\n                  placeholder={'Группа'}\n                />\n              </label>\n            </div>\n          </li>\n          <li className={css.formItem}>\n            <div>\n              <label>\n                <h2>1</h2>\n                <Select\n                  defaultValue={selectedOptionPrice}\n                  onChange={setSelectedOptionPrice}\n                  options={optionsCarPrice}\n                  //   styles={customStyles}\n                  placeholder={'To $'}\n                  formatOptionLabel={formatOptionLabel}\n                />\n              </label>\n            </div>\n          </li>\n\n          <li>\n            <label>From:</label>\n            <input\n              name=\"from\"\n              required\n              type=\"text\"\n              value={fromValue}\n              onChange={e => {\n                handleInputChange(e);\n              }}\n            />\n          </li>\n          <li>\n            <label>To:</label>\n            <input\n              name=\"to\"\n              required\n              //   pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              // title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              type=\"text\"\n              value={toValue}\n              onChange={e => {\n                handleInputChange(e);\n              }}\n            />\n          </li>\n        </ul>\n        <div></div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CatalogForm;\n","import { useState} from 'react';\nimport ListCards from \"../../components/ListCards/ListCards\";\nimport items from '../../advertsCars.json';\n// import { nanoid } from 'nanoid';\n// import { SelectForm1 } from \"../../components/SelectForm/SelectForm1\";\n// import { SelectForm2 } from \"../../components/SelectForm/SelectForm2\";\n// import { InputForm } from \"../../components/Form/InputForm/InputForm\";\n\n\nimport CatalogForm from '../../components/Form/CatalogForm/CatalogForm'\n\nconst CatalogPage = ()=> { \n    // const startContacts = [];\n    // const [contacts, setContacts] = useState(\n    //     () => JSON.parse(window.localStorage.getItem('contacts')) ?? startContacts\n    //   );\n      const [filteredArray, setFilteredArray] = useState(items); \n\n    const carBrand = [...new Set(items.map(car => car.make))];\n  const optionsCarBrand = carBrand.map(make => ({ label: make, value: make }));\n\n  const carPrice = [];\n  for (let i = 10; i <= 100; i += 10) {\n    carPrice.push(i);\n  }\n const optionsCarPrice = carPrice.map(make => ({ label: make, value: make }));\n  \n    const formSubmitCatalog = data => {\n        // data.id = nanoid();\n        const filterObject = data;\n        console.log(filterObject);\n        const newCarArray = items.map((item) => {\n            const rentalPrice = parseInt(item.rentalPrice.replace(/\\D/g, ''), 10); // Убираем все символы кроме цифр\n          \n            return {\n              ...item, // Копируем все поля из исходного объекта\n              rentalPrice, // Заменяем поле \"rentalPrice\" на числовое значение\n            };\n          });       \n          console.log(newCarArray);     \n              // Фильтруем массив по заданным условиям\n              const filteredArray = newCarArray.filter((item) => (\n                item.make === filterObject.make &&\n                item.rentalPrice <= filterObject.rentalPrice &&\n                item.mileage >= parseInt(filterObject.from, 10) &&\n                item.mileage <= parseInt(filterObject.to, 10)\n              ));\n              console.log(filteredArray);  \n              setFilteredArray(filteredArray);\n\n      };\n      \n      \n\n\n    return (\n        <div>\n    <h1>CatalogPage</h1>\n    <div>\n        <CatalogForm onSubmit={formSubmitCatalog} optionsCarBrand={optionsCarBrand} optionsCarPrice={optionsCarPrice} />\n    </div>     \n\n\n    <ListCards items={filteredArray} />\n    </div>\n    )\n}\n\nexport default CatalogPage;\n"],"names":["item","img","photoLink","arrayAddress","address","split","country","length","city","useState","itemFavorite","setItemFavorite","buttonColor","setButtonColor","localStorageData","localStorage","getItem","myArray","isObjectWithIdExists","Array","isArray","some","i","id","JSON","parse","className","css","src","alt","model","year","rentalPrice","rentalCompany","type","make","mileage","onClick","style","backgroundColor","filter","newObject","push","setItem","stringify","toggleObjectWithId","elements","items","map","onSubmit","optionsCarBrand","optionsCarPrice","selectedOptionBrand","setSelectedOptionBrand","selectedOptionPrice","setSelectedOptionPrice","fromValue","setFromValue","toValue","setToValue","handleInputChange","e","console","log","currentTarget","name","value","preventDefault","searchParameters","from","to","defaultValue","onChange","options","placeholder","formatOptionLabel","label","required","filteredArray","setFilteredArray","Set","car","carPrice","data","filterObject","newCarArray","parseInt","replace","ListCards"],"sourceRoot":""}