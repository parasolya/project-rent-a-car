{"version":3,"file":"static/js/637.f85fe08d.chunk.js","mappings":"keACA,EAAuB,0BAAvB,EAA+D,iCAA/D,EAA+G,kCAA/G,EAAwJ,0BAAxJ,EAA4L,6B,kBCqH5L,EA9GoB,WAClB,OAA0CA,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,GAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAsCN,EAAAA,EAAAA,WAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAA8BR,EAAAA,EAAAA,UAAS,IAAvC,eAAOS,EAAP,KAAgBC,EAAhB,KACA,GAAoCV,EAAAA,EAAAA,WAAS,GAA7C,eAAOW,EAAP,KAAmBC,EAAnB,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAUT,GACV,IAAMU,EAAY,mCAAG,8GAEKC,EAAAA,EAAAA,MAFL,OAEXP,EAFW,OAIjBC,EAAWD,GAJM,gDAMjBQ,QAAQC,MAAR,MANiB,yDAAH,qDASlBH,GACD,GAAE,CAACV,IAyBJ,IAvBA,IAAMS,EAAS,mCAAG,WAAMK,GAAN,uFAEdf,GAAW,GAFG,UAGSgB,EAAAA,EAAAA,IAAUD,EAAM,GAHzB,OAIU,KADlBE,EAHQ,QAIDC,OACXd,GAAe,GAEfN,EAAiBmB,GAEnBjB,GAAW,GATG,gDAWda,QAAQC,MAAR,MAXc,yBAadd,GAAW,GAbG,4EAAH,sDAiBTmB,EAAkBC,EAAAA,KAAa,SAAAC,GAAI,MAAK,CAC5CC,MAAOD,EACPE,MAAOF,EAFgC,IAKnCG,EAAW,GACRC,EAAI,GAAIA,GAAK,IAAKA,GAAK,GAC9BD,EAASE,KAAKD,GAEhB,IAAME,EAAkBH,EAASI,KAAI,SAAAP,GAAI,MAAK,CAAEC,MAAOD,EAAME,MAAOF,EAA3B,IA0BzC,OACE,iBAAKQ,UAAWC,EAAhB,WACE,0BACE,SAACC,EAAA,EAAD,CACEC,SA5BkB,SAAAC,GACxBzB,GAAc,GACd,IAAM0B,EAAeD,EASfE,EARc9B,EAAQuB,KAAI,SAAAQ,GAC9B,IAAMC,EAAcC,SAASF,EAAKC,YAAYE,QAAQ,MAAO,IAAK,IAClE,OAAO,kBACFH,GADL,IAEEC,YAAAA,GAEH,IAEgCG,QAC/B,SAAAJ,GAAI,OACFA,EAAKf,OAASa,EAAab,MAC3Be,EAAKC,aAAeH,EAAaG,aACjCD,EAAKK,SAAWH,SAASJ,EAAaQ,KAAM,KAC5CN,EAAKK,SAAWH,SAASJ,EAAaS,GAAI,GAJxC,IAMN7C,EAAiBqC,EAElB,EASOhB,gBAAiBA,EACjBQ,gBAAiBA,MAGpB5B,EACC,aAC+B,IAAzBF,EAAcqB,QACpB,SAAC0B,EAAA,EAAD,CACEC,MAAOhD,EACPiD,sBAhBe,SAAAC,GAAQ,KAiBnB,gBAAKlB,UAAWC,EAAhB,UAA6B,cAAGD,UAAWC,EAAd,iEAElCvB,IAAe,0BAChB,oBACEyC,QAAS,WACH7C,GAEFD,EADiBD,EAAc,EAGlC,EACDgD,MAAO,CAAEC,QAAS/C,EAAc,QAAU,QAC1C0B,UAAWC,EARb,UAUG,KACD,cAAGD,UAAWC,EAAd,8BAKT,C","sources":["webpack://project-rent-a-car/./src/pages/CatalogPage/CatalogPage.module.css?b0a0","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"page\":\"CatalogPage_page__lbpZ6\",\"btnLoadMore\":\"CatalogPage_btnLoadMore__NyFFA\",\"textLoadMore\":\"CatalogPage_textLoadMore__o8h0L\",\"text\":\"CatalogPage_text__ibsKU\",\"boxText\":\"CatalogPage_boxText__bSfpF\"};","import { useState, useEffect } from 'react';\nimport ListCards from '../../components/ListCards/ListCards';\nimport carBrand from '../../dataFile/makes.json';\nimport { fetchCars, fetchDataAll } from '../../loadAPI.js';\nimport css from './CatalogPage.module.css';\n\nimport CatalogForm from '../../components/Form/CatalogForm/CatalogForm';\n\nconst CatalogPage = () => {\n  const [filteredArray, setFilteredArray] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasNextPage, setHasNextPage] = useState(true);\n  const [allCars, setAllCars] = useState([]);\n  const [filtration, setFiltration] = useState(false);\n\n  useEffect(() => {\n    fetchData(currentPage);\n    const fetchAllData = async () => {\n      try {\n        const allCars = await fetchDataAll(); \n        \n        setAllCars(allCars)\n      } catch (error) {\n        console.error(error);\n      } \n    };\n    fetchAllData();\n  }, [currentPage]);\n\n  const fetchData = async page => {\n    try {\n      setLoading(true);\n      const response = await fetchCars(page, 8); \n      if (response.length === 0) {\n        setHasNextPage(false);\n      } else {\n        setFilteredArray(response);\n      }\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const optionsCarBrand = carBrand.map(make => ({\n    label: make,\n    value: make,\n  }));\n\n  const carPrice = [];\n  for (let i = 10; i <= 600; i += 10) {\n    carPrice.push(i);\n  }\n  const optionsCarPrice = carPrice.map(make => ({ label: make, value: make }));\n\n  const formSubmitCatalog = data => {\n    setFiltration(true);\n    const filterObject = data;\n    const newCarArray = allCars.map(item => {\n      const rentalPrice = parseInt(item.rentalPrice.replace(/\\D/g, ''), 10);\n      return {\n        ...item,\n        rentalPrice,\n      };\n    });\n\n    const filteredCars = newCarArray.filter(\n      item =>\n        item.make === filterObject.make &&\n        item.rentalPrice <= filterObject.rentalPrice &&\n        item.mileage >= parseInt(filterObject.from, 10) &&\n        item.mileage <= parseInt(filterObject.to, 10)\n    );\n    setFilteredArray(filteredCars);\n    \n  };\n\n  const changeFavorite = id => {};\n\n  return (\n    <div className={css.page}>\n      <div>\n        <CatalogForm\n          onSubmit={formSubmitCatalog}\n          optionsCarBrand={optionsCarBrand}\n          optionsCarPrice={optionsCarPrice}\n        />\n      </div>\n      {loading ? (\n        'Loading...'\n      ) : (  (filteredArray.length !== 0) ?\n        <ListCards\n          items={filteredArray}\n          onChangeFavoriteArrey={changeFavorite}\n        /> : (<div className={css.boxText}><p className={css.text}>All cars are booked, try again later. Good luck!</p></div>)\n      )}\n      { !filtration && (<div>\n        <button\n          onClick={() => {\n            if (hasNextPage) {\n              const nextPage = currentPage + 1;\n              setCurrentPage(nextPage);\n            }\n          }}\n          style={{ display: hasNextPage ? 'block' : 'none' }}\n          className={css.btnLoadMore}\n        >\n          {' '}\n          <p className={css.textLoadMore}>Load more</p>\n        </button>\n      </div>)}\n    </div>\n  );\n};\n\nexport default CatalogPage;\n"],"names":["useState","filteredArray","setFilteredArray","loading","setLoading","currentPage","setCurrentPage","hasNextPage","setHasNextPage","allCars","setAllCars","filtration","setFiltration","useEffect","fetchData","fetchAllData","fetchDataAll","console","error","page","fetchCars","response","length","optionsCarBrand","carBrand","make","label","value","carPrice","i","push","optionsCarPrice","map","className","css","CatalogForm","onSubmit","data","filterObject","filteredCars","item","rentalPrice","parseInt","replace","filter","mileage","from","to","ListCards","items","onChangeFavoriteArrey","id","onClick","style","display"],"sourceRoot":""}